---
name: CI Bmeme PHP container images
on:
  push:
    branches:
      - "*"
      - "!main"

env:
  registry: docker.io
  repository: bmeme/php

jobs:

  configure:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - 
        name: Checkout to repository
        uses: actions/checkout@v3
      -
        name: Set matrix data
        id: set-matrix
        run: echo "matrix=$(jq -c . < ./config.json)" >> $GITHUB_OUTPUT
  
  build:
    name: Build and test Bmeme PHP container images using Docker
    runs-on: ubuntu-latest
    needs: configure
    strategy:
      matrix: ${{ fromJson(needs.configure.outputs.matrix) }}
    steps:
      - 
        name: Check out the codebase.
        uses: actions/checkout@v3
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Lint Dockerfile
        id: lint
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: ${{ matrix.php_pretty_version }}/${{ matrix.os_version }}/${{ matrix.php_type }}/Dockerfile
          config: .hadolint.yaml
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Build images with base tags
        id: build-base
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ${{ matrix.php_pretty_version }}/${{ matrix.os_version }}/${{ matrix.php_type }}/Dockerfile
          push: false
          platforms: "linux/amd64, linux/arm64"
          tags: |
            ${{ env.registry }}/${{ env.repository }}:${{ matrix.name }}
            ${{ env.registry }}/${{ env.repository }}:${{ matrix.php_pretty_version }}-${{ matrix.php_type }}-${{ matrix.os_version }}
